<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
    <!--注意：路径要替换为自己本地实际路径，在mavne core的plugins 运行mybatis-generator-->
    <classPathEntry location="D:\mybatis_tools\generator\mysql-connector-java-5.1.39.jar"/>
    <context id="context1" defaultModelType="hierarchical" targetRuntime="MyBatis3Simple">
        <!-- 为了防止生成的代码中有很多注释，比较难看，加入下面的配置控制  -->
        <!-- 是否去除自动生成的注释 true：是 ：false:否 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="false"/>
        </commentGenerator>
        <!--去除注释的配置要放在数据库配置的前面，不然会报错-->
        <!-- 注释end -->

        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://172.16.0.101:3306/qyjx_test"
                        userId="root" password="sa"/>
        <!--
            Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <javaModelGenerator targetPackage="com.winning.batjx.core.domain"
                            targetProject="src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 是否对model添加构造函数
            <property name="constructorBased" value="true"/> -->
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法
            <property name="immutable" value="false"/> -->
        </javaModelGenerator>
        <!-- mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件  -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--
           客户端代码，生成易于使用的针对Model对象和XML配置文件的代码
           type="ANNOTATEDMAPPER",生成Java Model和基于注解的Mapper对象
           type="MIXEDMAPPER",生成基于注解的Java Model和相应的Mapper对象
           type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
       -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.winning.batjx.core.mapper.qyjx" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--
              文件无需checkin  checkout   需要运行的，修改
              tableName 和 domainObjectName
        -->
        <table tableName="qyjx_sjtb" domainObjectName="Sjtb"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false" />
        </table>
    </context>

</generatorConfiguration>